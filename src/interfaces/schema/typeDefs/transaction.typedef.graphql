type Query {
  transactions(
    monthDate: DateTime!
    pagination: CursorPaginationInput
  ): PaginatedTransaction! @auth(permissions: ["default"])
  transaction(id: ID!): Transaction! @auth(permissions: ["default"])
}

type Mutation {
  syncTransactions: SyncTransactions! @auth(permissions: ["default"])
  # createTransaction(input: CreateTransactionInput!): Transaction!
  # 	@auth(permissions: ["default"])
  # updateTransaction(input: UpdateTransactionInput!): Transaction!
  # 	@auth(permissions: ["default"])
  deleteTransaction(id: ID!): ID! @auth(permissions: ["default"])
}

enum TransactionStatusEnum {
  POSTED
  PENDING
}

type PaginatedTransaction {
  items: [Transaction!]!
  pageInfo: PageInformation
}

type Transaction {
  id: ID!
  tellerId: ID!
  account: Account!
  category: Category
  amount: Float!
  date: DateTime!
  description: String!
  status: TransactionStatusEnum!
  type: String!
}

enum SyncStatusEnum {
  SUCCESS
  ERROR
}

type SyncTransactions {
  status: SyncStatusEnum!
  error: String
}

# input CreateTransactionInput {
# 	title: String!
# 	amount: Float!
# 	categoryId: ID!
# 	date: DateTime!
# 	description: String
# }

# input UpdateTransactionInput {
# 	id: ID!
# 	title: String
# 	amount: Float
# 	categoryId: ID
# 	date: DateTime
# 	description: String
# }
